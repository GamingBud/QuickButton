function init(self)
	msg.post(".", "acquire_input_focus")
	
	self.gui_buttons = {}
	self.gui_btn_owners = {}

	self.total_buttons = 0
end

local function Create_Button(self, owner, order, pos, font, text)
	self.total_buttons = self.total_buttons + 1
	local btns = self.total_buttons
	local metrics = gui.get_text_metrics(font, text .. "aa") -- "aa" is to add two extra characters to create margins
	self.gui_buttons[btns] = {
		box = gui.new_box_node(pos, vmath.vector3(metrics.width,metrics.height,0)),
		text = gui.new_text_node(pos, text)
	}; gui.set_font(self.gui_buttons[btns].text, font); gui.set_color(self.gui_buttons[btns].box, vmath.vector4(.5,.5,.5,1))
	self.gui_btn_owners[btns] = {
		owner = owner,
		order = order
	}

	print("QUICK_BUTTON: BUTTON LIST")
	pprint(self.gui_buttons)
	print("QUICK_BUTTON: OWNER LIST")
	pprint(self.gui_btn_owners)
end

local function Delete_Button(self, b)
	gui.delete_node(self.gui_buttons[b].box); gui.delete_node(self.gui_buttons[b].text)

	self.gui_buttons[b].box = nil; self.gui_buttons[b].text = nil
	self.gui_btn_owners[b].owner = nil; self.gui_btn_owners[b].order = nil
end

local function Click_Button(self, pos)
	for b=1,self.total_buttons,1 do
		if gui.pick_node(self.gui_buttons[b].box, pos.x, pos.y) then
			msg.post(self.gui_btn_owners[b].owner, self.gui_btn_owners[b].order, {b=b})
			print("Button #" .. b .. " posted message to '" .. tostring(self.gui_btn_owners[b].owner) .. "' with order to: " .. self.gui_btn_owners[b].order)
		end
	end
end

local function Highlight_Button(self, pos)
	for b=1,self.total_buttons,1 do
		if self.gui_buttons[b].box ~= nil then
			if gui.pick_node(self.gui_buttons[b].box, pos.x, pos.y) then
				gui.set_color(self.gui_buttons[b].box, vmath.vector4(.8,.8,.8,1))
			elseif gui.get_color(self.gui_buttons[b].box) == vmath.vector4(.8,.8,.8,1) then
				gui.set_color(self.gui_buttons[b].box, vmath.vector4(.5,.5,.5,1))
			end
		end
	end
end

function on_message(self, message_id, message, sender)
	if message_id == hash("Quick_Button") then
		Create_Button(self,sender,message.order,message.pos,message.font,message.text)
	elseif message_id == hash("Delete_QB") then
		Delete_Button(self, message.b)
	end
end

function on_input(self, action_id, action)
	Highlight_Button(self, action)
	if action_id == hash("msL") and action.released then
		Click_Button(self, action)
	end
end